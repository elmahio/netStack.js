const assert = require('assert');
const { JSDOM } = require('jsdom');
const fs = require('fs');
const dom = fs.readFileSync('./test/stacktraces.html', 'utf8');
const jsdom = new JSDOM(dom);
const { window } = jsdom;
const expect = require('chai').expect;
const netStack = require('../netstack.js');
global.document = window.document;

describe('netstack.js', function() {
    describe('stacktrace test', function() {
        describe('> English I', function() {
            const stackElementEN = new netStack('.stacktrace-en', { prettyprint: true });
            const languageEN = stackElementEN.getLanguage();
            const stringStack = "System.ApplicationException: Runtime error \n ---&gt; System.FormatException: The input string was not formatted correctly.\n   at <span class=\"st-frame\"><span class=\"st-type\">System.Number</span>.<span class=\"st-method\">ThrowOverflowOrFormatException</span><span class=\"st-frame-params\">(<span class=\"st-param-type\">ParsingStatus</span> <span class=\"st-param-name\">status</span>, <span class=\"st-param-type\">TypeCode</span> <span class=\"st-param-name\">type</span>)</span></span>\n   at <span class=\"st-frame\"><span class=\"st-type\">System.Number</span>.<span class=\"st-method\">ParseInt32</span><span class=\"st-frame-params\">(<span class=\"st-param-type\">ReadOnlySpan`1</span> <span class=\"st-param-name\">value</span>, <span class=\"st-param-type\">NumberStyles</span> <span class=\"st-param-name\">styles</span>, <span class=\"st-param-type\">NumberFormatInfo</span> <span class=\"st-param-name\">info</span>)</span></span>\n   at <span class=\"st-frame\"><span class=\"st-type\">System.Int32</span>.<span class=\"st-method\">Parse</span><span class=\"st-frame-params\">(<span class=\"st-param-type\">String</span> <span class=\"st-param-name\">s</span>)</span></span>\n   at <span class=\"st-frame\"><span class=\"st-type\">MyNamespace.IntParser</span>.<span class=\"st-method\">Execute</span><span class=\"st-frame-params\">(<span class=\"st-param-type\">String</span> <span class=\"st-param-name\">s</span>)</span></span> in <span class=\"st-file\">C:\\apps\\MyNamespace\\IntParser.cs</span>:<span class=\"st-line\">line 13</span> \n   --- End of stack trace from previous location where exception was thrown ---\n   at <span class=\"st-frame\"><span class=\"st-type\">Elmah.Io.App.Controllers.AccountController</span>.<span class=\"st-method\">ChangeEmail</span><span class=\"st-frame-params\">(<span class=\"st-param-type\">String</span> <span class=\"st-param-name\">secret</span>)</span></span> in <span class=\"st-file\">x:\\agent\\_work\\94\\s\\src\\Elmah.Io.App\\Controllers\\AccountController.cs</span>:<span class=\"st-line\">line 45</span>\n   at <span class=\"st-frame\"><span class=\"st-type\">System.Convert</span>.<span class=\"st-method\">FromBase64CharPtr</span><span class=\"st-frame-params\">(<span class=\"st-param-type\">Char*</span> <span class=\"st-param-name\">inputPtr</span>, <span class=\"st-param-type\">Int32</span> <span class=\"st-param-name\">inputLength</span>)</span></span> \n   --- End of stack trace from previous location where exception was thrown ---\n   at <span class=\"st-frame\"><span class=\"st-type\">MyNamespace.IntParser</span>.<span class=\"st-method\">Execute</span><span class=\"st-frame-params\">(<span class=\"st-param-type\">String</span> <span class=\"st-param-name\">s</span>)</span></span> in <span class=\"st-file\">C:\\apps\\MyNamespace\\IntParser.cs</span>:<span class=\"st-line\">line 17</span>\n   at <span class=\"st-frame\"><span class=\"st-type\">MyNamespace.Program</span>.<span class=\"st-method\">Main</span><span class=\"st-frame-params\">(<span class=\"st-param-type\">String[]</span> <span class=\"st-param-name\">args</span>)</span></span> in <span class=\"st-file\">C:\\apps\\MyNamespace\\Program.cs</span>:<span class=\"st-line\">line 13</span>";

            it('-> recognize language', function() {
                assert.equal('english', languageEN);
            });
            it('-> create HTML', function() {
                assert.equal(stringStack, stackElementEN.element.innerHTML);
            });
        });

        describe('> English II', function() {
            const stackElementEN = new netStack('.stacktrace-en-2', { prettyprint: true });
            const languageEN = stackElementEN.getLanguage();
            const stringStack = "Elmah.TestException: This is a test exception that can be safely ignored.\n   at <span class=\"st-frame\"><span class=\"st-type\">Elmah.ErrorLogPageFactory</span>.<span class=\"st-method\">FindHandler</span><span class=\"st-frame-params\">(<span class=\"st-param-type\">String</span> <span class=\"st-param-name\">name</span>)</span></span> in <span class=\"st-file\">C:\\ELMAH\\src\\Elmah\\ErrorLogPageFactory.cs</span>:<span class=\"st-line\">line 126</span>\n   at <span class=\"st-frame\"><span class=\"st-type\">Elmah.ErrorLogPageFactory</span>.<span class=\"st-method\">GetHandler</span><span class=\"st-frame-params\">(<span class=\"st-param-type\">HttpContext</span> <span class=\"st-param-name\">context</span>, <span class=\"st-param-type\">String</span> <span class=\"st-param-name\">requestType</span>, <span class=\"st-param-type\">String</span> <span class=\"st-param-name\">url</span>, <span class=\"st-param-type\">String</span> <span class=\"st-param-name\">pathTranslated</span>)</span></span> in <span class=\"st-file\">C:\\ELMAH\\src\\Elmah\\ErrorLogPageFactory.cs</span>:<span class=\"st-line\">line 66</span>\n   at <span class=\"st-frame\"><span class=\"st-type\">System.Web.HttpApplication</span>.<span class=\"st-method\">MapHttpHandler</span><span class=\"st-frame-params\">(<span class=\"st-param-type\">HttpContext</span> <span class=\"st-param-name\">context</span>, <span class=\"st-param-type\">String</span> <span class=\"st-param-name\">requestType</span>, <span class=\"st-param-type\">VirtualPath</span> <span class=\"st-param-name\">path</span>, <span class=\"st-param-type\">String</span> <span class=\"st-param-name\">pathTranslated</span>, <span class=\"st-param-type\">Boolean</span> <span class=\"st-param-name\">useAppConfig</span>)</span></span>\n   at <span class=\"st-frame\"><span class=\"st-type\">System.Web.HttpApplication.MapHandlerExecutionStep.System.Web.HttpApplication.IExecutionStep</span>.<span class=\"st-method\">Execute</span><span class=\"st-frame-params\">()</span></span>\n   at <span class=\"st-frame\"><span class=\"st-type\">System.Web.HttpApplication</span>.<span class=\"st-method\">ExecuteStep</span><span class=\"st-frame-params\">(<span class=\"st-param-type\">IExecutionStep</span> <span class=\"st-param-name\">step</span>, <span class=\"st-param-type\">Boolean&amp;</span> <span class=\"st-param-name\">completedSynchronously</span>)</span></span>";

            it('-> recognize language', function() {
                assert.equal('english', languageEN);
            });
            it('-> create HTML', function() {
                assert.equal(stringStack, stackElementEN.element.innerHTML);
            });
        });

        describe('> English - stacktrace bug', function() {
            const stackElementEN = new netStack('.stacktrace-bug', { prettyprint: true });
            const languageEN = stackElementEN.getLanguage();
            const stringStack = "Azure.Messaging.ServiceBus.ServiceBusException: The lock supplied is invalid. Either the lock expired, or the message has already been removed from the queue, or was received by a different receiver instance. (MessageLockLost). For troubleshooting information, see https://aka.ms/azsdk/net/servicebus/exceptions/troubleshoot.\n   at <span class=\"st-frame\"><span class=\"st-type\">Azure.Messaging.ServiceBus.Amqp.AmqpReceiver</span>.<span class=\"st-method\">ThrowLockLostException</span><span class=\"st-frame-params\">()</span></span>\n   at <span class=\"st-frame\"><span class=\"st-type\">Azure.Messaging.ServiceBus.Amqp.AmqpReceiver</span>.<span class=\"st-method\">DisposeMessageAsync</span><span class=\"st-frame-params\">(<span class=\"st-param-type\">Guid</span> <span class=\"st-param-name\">lockToken</span>, <span class=\"st-param-type\">Outcome</span> <span class=\"st-param-name\">outcome</span>, <span class=\"st-param-type\">TimeSpan</span> <span class=\"st-param-name\">timeout</span>)</span></span>\n   at <span class=\"st-frame\"><span class=\"st-type\">Azure.Messaging.ServiceBus.Amqp.AmqpReceiver</span>.<span class=\"st-method\">CompleteInternalAsync</span><span class=\"st-frame-params\">(<span class=\"st-param-type\">Guid</span> <span class=\"st-param-name\">lockToken</span>, <span class=\"st-param-type\">TimeSpan</span> <span class=\"st-param-name\">timeout</span>)</span></span>\n   at <span class=\"st-frame\"><span class=\"st-type\">Azure.Messaging.ServiceBus.Amqp.AmqpReceiver.<span>&lt;</span><span>&gt;</span>c.<span>&lt;</span><span>&lt;</span>CompleteAsync<span>&gt;</span>b__43_0<span>&gt;</span>d</span>.<span class=\"st-method\">MoveNext</span><span class=\"st-frame-params\">()</span></span> \n   --- End of stack trace from previous location ---\n   at <span class=\"st-frame\"><span class=\"st-type\">Azure.Messaging.ServiceBus.ServiceBusRetryPolicy.<span>&lt;</span><span>&gt;</span>c__22`1.<span>&lt;</span><span>&lt;</span>RunOperation<span>&gt;</span>b__22_0<span>&gt;</span>d</span>.<span class=\"st-method\">MoveNext</span><span class=\"st-frame-params\">()</span></span> \n   --- End of stack trace from previous location ---\n   at <span class=\"st-frame\"><span class=\"st-type\">Azure.Messaging.ServiceBus.ServiceBusRetryPolicy</span>.<span class=\"st-method\">RunOperation[T1,TResult]</span><span class=\"st-frame-params\">(<span class=\"st-param-type\">Func`4</span> <span class=\"st-param-name\">operation</span>, <span class=\"st-param-type\">T1</span> <span class=\"st-param-name\">t1</span>, <span class=\"st-param-type\">TransportConnectionScope</span> <span class=\"st-param-name\">scope</span>, <span class=\"st-param-type\">CancellationToken</span> <span class=\"st-param-name\">cancellationToken</span>, <span class=\"st-param-type\">Boolean</span> <span class=\"st-param-name\">logRetriesAsVerbose</span>)</span></span>\n   at <span class=\"st-frame\"><span class=\"st-type\">Azure.Messaging.ServiceBus.ServiceBusRetryPolicy</span>.<span class=\"st-method\">RunOperation[T1]</span><span class=\"st-frame-params\">(<span class=\"st-param-type\">Func`4</span> <span class=\"st-param-name\">operation</span>, <span class=\"st-param-type\">T1</span> <span class=\"st-param-name\">t1</span>, <span class=\"st-param-type\">TransportConnectionScope</span> <span class=\"st-param-name\">scope</span>, <span class=\"st-param-type\">CancellationToken</span> <span class=\"st-param-name\">cancellationToken</span>)</span></span>\n   at <span class=\"st-frame\"><span class=\"st-type\">Azure.Messaging.ServiceBus.Amqp.AmqpReceiver</span>.<span class=\"st-method\">CompleteAsync</span><span class=\"st-frame-params\">(<span class=\"st-param-type\">Guid</span> <span class=\"st-param-name\">lockToken</span>, <span class=\"st-param-type\">CancellationToken</span> <span class=\"st-param-name\">cancellationToken</span>)</span></span>\n   at <span class=\"st-frame\"><span class=\"st-type\">Azure.Messaging.ServiceBus.ServiceBusReceiver</span>.<span class=\"st-method\">CompleteMessageAsync</span><span class=\"st-frame-params\">(<span class=\"st-param-type\">ServiceBusReceivedMessage</span> <span class=\"st-param-name\">message</span>, <span class=\"st-param-type\">CancellationToken</span> <span class=\"st-param-name\">cancellationToken</span>)</span></span>\n   at <span class=\"st-frame\"><span class=\"st-type\">Azure.Messaging.ServiceBus.ReceiverManager</span>.<span class=\"st-method\">ProcessOneMessage</span><span class=\"st-frame-params\">(<span class=\"st-param-type\">ServiceBusReceivedMessage</span> <span class=\"st-param-name\">triggerMessage</span>, <span class=\"st-param-type\">CancellationToken</span> <span class=\"st-param-name\">cancellationToken</span>)</span></span>";
            it('-> recognize language', function() {
                assert.equal('english', languageEN);
            });
            it('-> create HTML', function() {
                assert.equal(stringStack, stackElementEN.element.innerHTML);
            });
        });

        describe('> English - ultimate stacktrace test', function() {
            const stackElementEN = new netStack('.stacktrace-ultimate', { prettyprint: true });
            const languageEN = stackElementEN.getLanguage();
            const stringStack = "System.AggregateException: One or more errors occurred. (One of the identified items was in an invalid format.) (Object reference not set to an instance of an object.) \n ---&gt; System.FormatException: One of the identified items was in an invalid format.\n   at <span class=\"st-frame\"><span class=\"st-type\">ConsoleApp.A</span>.<span class=\"st-method\">X</span><span class=\"st-frame-params\">()</span></span> in <span class=\"st-file\">C:\\projects\\ConsoleApp\\A.cs</span>:<span class=\"st-line\">line 13</span>\n   at <span class=\"st-frame\"><span class=\"st-type\">Program.<span>&lt;</span><span>&gt;</span>c.<span>&lt;</span><span>&lt;</span>Main<span>&gt;</span>Program.<span>&lt;</span><span>&gt;</span>c.<span>&lt;</span><span>&lt;</span>Main<span>&gt;</span>Program.<span>&lt;</span><span>&gt;</span>c</span>.<span class=\"st-method\"><span>&lt;</span><span>&lt;</span>Main<span>&gt;</span>Program.<span>&lt;</span><span>&gt;</span>c.<span>&lt;</span><span>&lt;</span>Main<span>&gt;</span>Program.<span>&lt;</span><span>&gt;</span>c.<span>&lt;</span><span>&lt;</span>Main<span>&gt;</span>Program.<span>&lt;</span><span>&gt;</span>c.<span>&lt;</span><span>&lt;</span>Main<span>&gt;</span>Program.<span>&lt;</span><span>&gt;</span>c.<span>&lt;</span><span>&lt;</span>Main<span>&gt;</span>Program.<span>&lt;</span><span>&gt;</span>c.<span>&lt;</span><span>&lt;</span>Main<span>&gt;</span>Program.<span>&lt;</span><span>&gt;</span>c.<span>&lt;</span><span>&lt;</span>Main<span>&gt;</span>$<span>&gt;</span>b__0_0()gt;b__0_0()gt;b__0_0()</span></span>gt;b__0_0gt;b__0_0() in <span class=\"st-file\">C:\\projects\\ConsoleApp\\Program.cs</span>:<span class=\"st-line\">line 12</span>\n   at <span class=\"st-frame\"><span class=\"st-type\">Program.<span>&lt;</span><span>&lt;</span>Main<span>&gt;</span>Program.<span>&lt;</span><span>&lt;</span>Main<span>&gt;</span>Program</span>.<span class=\"st-method\"><span>&lt;</span><span>&lt;</span>Main<span>&gt;</span>Program.<span>&lt;</span><span>&lt;</span>Main<span>&gt;</span>Program.<span>&lt;</span><span>&lt;</span>Main<span>&gt;</span>Program.<span>&lt;</span><span>&lt;</span>Main<span>&gt;</span>Program.<span>&lt;</span><span>&lt;</span>Main<span>&gt;</span>Program.<span>&lt;</span><span>&lt;</span>Main<span>&gt;</span>Program.<span>&lt;</span><span>&lt;</span>Main<span>&gt;</span>$<span>&gt;</span>g__CaptureException|0_1(Action action)gt;g__CaptureException|0_1(Action action)gt;g__CaptureException|0_1(Action action)</span></span>gt;g__CaptureException|0_1gt;g__CaptureException|0_1(Action action) in <span class=\"st-file\">C:\\projects\\ConsoleApp\\Program.cs</span>:<span class=\"st-line\">line 45</span> \n   --- End of stack trace from previous location ---\n   at <span class=\"st-frame\"><span class=\"st-type\">Program</span>.<span class=\"st-method\"><span>&lt;</span>Main<span>&gt;</span>$</span><span class=\"st-frame-params\">(<span class=\"st-param-type\">String[]</span> <span class=\"st-param-name\">args</span>)</span></span> in <span class=\"st-file\">C:\\projects\\ConsoleApp\\Program.cs</span>:<span class=\"st-line\">line 11</span> \n   --- End of inner exception stack trace --- \n ---&gt; (Inner Exception #1) System.NullReferenceException: Object reference not set to an instance of an object.\n   at <span class=\"st-frame\"><span class=\"st-type\">ConsoleApp.B</span>.<span class=\"st-method\">Y</span><span class=\"st-frame-params\">()</span></span> in <span class=\"st-file\">C:\\projects\\ConsoleApp\\A.cs</span>:<span class=\"st-line\">line 21</span>\n   at <span class=\"st-frame\"><span class=\"st-type\">Program</span>.<span class=\"st-method\"><span>&lt;</span>Main<span>&gt;</span>$</span><span class=\"st-frame-params\">(<span class=\"st-param-type\">String[]</span> <span class=\"st-param-name\">args</span>)</span></span> in <span class=\"st-file\">C:\\projects\\ConsoleApp\\Program.cs</span>:<span class=\"st-line\">line 22</span><span>&lt;</span>---";
            it('-> recognize language', function() {
                assert.equal('english', languageEN);
            });
            it('-> create HTML', function() {
                assert.equal(stringStack, stackElementEN.element.innerHTML);
            });
        });

        describe('> Danish', function() {
            const stackElementDK = new netStack('.stacktrace-dk', { prettyprint: true });
            const languageDK = stackElementDK.getLanguage();
            const stringStack = "System.ApplicationException: Kørselsfejl \n ---&gt; System.FormatException: Inputstrengen blev ikke formateret korrekt.\n   ved <span class=\"st-frame\"><span class=\"st-type\">System.Number</span>.<span class=\"st-method\">ThrowOverflowOrFormatException</span><span class=\"st-frame-params\">(<span class=\"st-param-type\">ParsingStatus</span> <span class=\"st-param-name\">status</span>, <span class=\"st-param-type\">TypeCode</span> <span class=\"st-param-name\">type</span>)</span></span>\n   ved <span class=\"st-frame\"><span class=\"st-type\">System.Number</span>.<span class=\"st-method\">ParseInt32</span><span class=\"st-frame-params\">(<span class=\"st-param-type\">ReadOnlySpan`1</span> <span class=\"st-param-name\">value</span>, <span class=\"st-param-type\">NumberStyles</span> <span class=\"st-param-name\">styles</span>, <span class=\"st-param-type\">NumberFormatInfo</span> <span class=\"st-param-name\">info</span>)</span></span>\n   ved <span class=\"st-frame\"><span class=\"st-type\">System.Int32</span>.<span class=\"st-method\">Parse</span><span class=\"st-frame-params\">(<span class=\"st-param-type\">String</span> <span class=\"st-param-name\">s</span>)</span></span>\n   ved <span class=\"st-frame\"><span class=\"st-type\">MyNamespace.IntParser</span>.<span class=\"st-method\">Execute</span><span class=\"st-frame-params\">(<span class=\"st-param-type\">String</span> <span class=\"st-param-name\">s</span>)</span></span> i <span class=\"st-file\">C:\\apps\\MyNamespace\\IntParser.cs</span>:<span class=\"st-line\">linje 13</span> \n   --- Slutning af stackspor fra tidligere sted, hvor undtagelse blev kastet ---\n   ved <span class=\"st-frame\"><span class=\"st-type\">Elmah.Io.App.Controllers.AccountController</span>.<span class=\"st-method\">ChangeEmail</span><span class=\"st-frame-params\">(<span class=\"st-param-type\">String</span> <span class=\"st-param-name\">secret</span>)</span></span> i <span class=\"st-file\">x:\\agent\\_work\\94\\s\\src\\Elmah.Io.App\\Controllers\\AccountController.cs</span>:<span class=\"st-line\">linje 45</span>\n   ved <span class=\"st-frame\"><span class=\"st-type\">System.Convert</span>.<span class=\"st-method\">FromBase64CharPtr</span><span class=\"st-frame-params\">(<span class=\"st-param-type\">Char*</span> <span class=\"st-param-name\">inputPtr</span>, <span class=\"st-param-type\">Int32</span> <span class=\"st-param-name\">inputLength</span>)</span></span> \n   --- Slutning af stackspor fra tidligere sted, hvor undtagelse blev kastet ---\n   ved <span class=\"st-frame\"><span class=\"st-type\">MyNamespace.IntParser</span>.<span class=\"st-method\">Execute</span><span class=\"st-frame-params\">(<span class=\"st-param-type\">String</span> <span class=\"st-param-name\">s</span>)</span></span> i <span class=\"st-file\">C:\\apps\\MyNamespace\\IntParser.cs</span>:<span class=\"st-line\">linje 17</span>\n   ved <span class=\"st-frame\"><span class=\"st-type\">MyNamespace.Program</span>.<span class=\"st-method\">Main</span><span class=\"st-frame-params\">(<span class=\"st-param-type\">String[]</span> <span class=\"st-param-name\">args</span>)</span></span> i <span class=\"st-file\">C:\\apps\\MyNamespace\\Program.cs</span>:<span class=\"st-line\">linje 13</span>";

            it('-> recognize language', function() {
                assert.equal('danish', languageDK);
            });
            it('-> create HTML', function() {
                assert.equal(stringStack, stackElementDK.element.innerHTML);
            });
        });

        describe('> German', function() {
            const stackElementDE = new netStack('.stacktrace-de', { prettyprint: true });
            const languageDE = stackElementDE.getLanguage();
            const stringStack = "System.ApplicationException: Etwas hier \n ---&gt; System.FormatException: Die Eingabezeichenfolge wurde nicht richtig formatiert.\n   bei <span class=\"st-frame\"><span class=\"st-type\">System.Number</span>.<span class=\"st-method\">ThrowOverflowOrFormatException</span><span class=\"st-frame-params\">(<span class=\"st-param-type\">ParsingStatus</span> <span class=\"st-param-name\">status</span>, <span class=\"st-param-type\">TypeCode</span> <span class=\"st-param-name\">type</span>)</span></span>\n   bei <span class=\"st-frame\"><span class=\"st-type\">System.Number</span>.<span class=\"st-method\">ParseInt32</span><span class=\"st-frame-params\">(<span class=\"st-param-type\">ReadOnlySpan`1</span> <span class=\"st-param-name\">value</span>, <span class=\"st-param-type\">NumberStyles</span> <span class=\"st-param-name\">styles</span>, <span class=\"st-param-type\">NumberFormatInfo</span> <span class=\"st-param-name\">info</span>)</span></span>\n   bei <span class=\"st-frame\"><span class=\"st-type\">System.Int32</span>.<span class=\"st-method\">Parse</span><span class=\"st-frame-params\">(<span class=\"st-param-type\">String</span> <span class=\"st-param-name\">s</span>)</span></span>\n   bei <span class=\"st-frame\"><span class=\"st-type\">MyNamespace.IntParser</span>.<span class=\"st-method\">Execute</span><span class=\"st-frame-params\">(<span class=\"st-param-type\">String</span> <span class=\"st-param-name\">s</span>)</span></span> in <span class=\"st-file\">C:\\apps\\MyNamespace\\IntParser.cs</span>:<span class=\"st-line\">Zeile 13</span> \n   --- Ende des Stack-Trace vom vorherigen Ort, an dem eine Ausnahme ausgelöst wurde ---\n   bei <span class=\"st-frame\"><span class=\"st-type\">Elmah.Io.App.Controllers.AccountController</span>.<span class=\"st-method\">ChangeEmail</span><span class=\"st-frame-params\">(<span class=\"st-param-type\">String</span> <span class=\"st-param-name\">secret</span>)</span></span> in <span class=\"st-file\">x:\\agent\\_work\\94\\s\\src\\Elmah.Io.App\\Controllers\\AccountController.cs</span>:<span class=\"st-line\">Zeile 45</span>\n   bei <span class=\"st-frame\"><span class=\"st-type\">System.Convert</span>.<span class=\"st-method\">FromBase64CharPtr</span><span class=\"st-frame-params\">(<span class=\"st-param-type\">Char*</span> <span class=\"st-param-name\">inputPtr</span>, <span class=\"st-param-type\">Int32</span> <span class=\"st-param-name\">inputLength</span>)</span></span> \n   --- Ende des Stack-Trace vom vorherigen Ort, an dem eine Ausnahme ausgelöst wurde ---\n   bei <span class=\"st-frame\"><span class=\"st-type\">MyNamespace.IntParser</span>.<span class=\"st-method\">Execute</span><span class=\"st-frame-params\">(<span class=\"st-param-type\">String</span> <span class=\"st-param-name\">s</span>)</span></span> in <span class=\"st-file\">C:\\apps\\MyNamespace\\IntParser.cs</span>:<span class=\"st-line\">Zeile 17</span>\n   bei <span class=\"st-frame\"><span class=\"st-type\">MyNamespace.Program</span>.<span class=\"st-method\">Main</span><span class=\"st-frame-params\">(<span class=\"st-param-type\">String[]</span> <span class=\"st-param-name\">args</span>)</span></span> in <span class=\"st-file\">C:\\apps\\MyNamespace\\Program.cs</span>:<span class=\"st-line\">Zeile 13</span>";

            it('-> recognize language', function() {
                assert.equal('german', languageDE);
            });
            it('-> create HTML', function() {
                assert.equal(stringStack, stackElementDE.element.innerHTML);
            });
        });

        describe('> Russian', function() {
            const stackElementRU = new netStack('.stacktrace-ru', { prettyprint: true });
            const languageRU = stackElementRU.getLanguage();
            const stringStack = "System.ApplicationException: Ошибка в ходе выполнения \n ---&gt; System.FormatException: Входная строка имела неверный формат.\n   в <span class=\"st-frame\"><span class=\"st-type\">System.Number</span>.<span class=\"st-method\">ThrowOverflowOrFormatException</span><span class=\"st-frame-params\">(<span class=\"st-param-type\">ParsingStatus</span> <span class=\"st-param-name\">status</span>, <span class=\"st-param-type\">TypeCode</span> <span class=\"st-param-name\">type</span>)</span></span>\n   в <span class=\"st-frame\"><span class=\"st-type\">System.Number</span>.<span class=\"st-method\">ParseInt32</span><span class=\"st-frame-params\">(<span class=\"st-param-type\">ReadOnlySpan`1</span> <span class=\"st-param-name\">value</span>, <span class=\"st-param-type\">NumberStyles</span> <span class=\"st-param-name\">styles</span>, <span class=\"st-param-type\">NumberFormatInfo</span> <span class=\"st-param-name\">info</span>)</span></span>\n   в <span class=\"st-frame\"><span class=\"st-type\">System.Int32</span>.<span class=\"st-method\">Parse</span><span class=\"st-frame-params\">(<span class=\"st-param-type\">String</span> <span class=\"st-param-name\">s</span>)</span></span>\n   в <span class=\"st-frame\"><span class=\"st-type\">MyNamespace.IntParser</span>.<span class=\"st-method\">Execute</span><span class=\"st-frame-params\">(<span class=\"st-param-type\">String</span> <span class=\"st-param-name\">s</span>)</span></span> в <span class=\"st-file\">C:\\apps\\MyNamespace\\IntParser.cs</span>:<span class=\"st-line\">строка 13</span> \n   --- Конец трассировка стека из предыдущего расположения, где возникло исключение ---\n   в <span class=\"st-frame\"><span class=\"st-type\">Elmah.Io.App.Controllers.AccountController</span>.<span class=\"st-method\">ChangeEmail</span><span class=\"st-frame-params\">(<span class=\"st-param-type\">String</span> <span class=\"st-param-name\">secret</span>)</span></span> в <span class=\"st-file\">x:\\agent\\_work\\94\\s\\src\\Elmah.Io.App\\Controllers\\AccountController.cs</span>:<span class=\"st-line\">строка 45</span>\n   в <span class=\"st-frame\"><span class=\"st-type\">System.Convert</span>.<span class=\"st-method\">FromBase64CharPtr</span><span class=\"st-frame-params\">(<span class=\"st-param-type\">Char*</span> <span class=\"st-param-name\">inputPtr</span>, <span class=\"st-param-type\">Int32</span> <span class=\"st-param-name\">inputLength</span>)</span></span> \n   --- End of stack trace from previous location where exception was thrown ---\n   в <span class=\"st-frame\"><span class=\"st-type\">MyNamespace.IntParser</span>.<span class=\"st-method\">Execute</span><span class=\"st-frame-params\">(<span class=\"st-param-type\">String</span> <span class=\"st-param-name\">s</span>)</span></span> в <span class=\"st-file\">C:\\apps\\MyNamespace\\IntParser.cs</span>:<span class=\"st-line\">строка 17</span>\n   в <span class=\"st-frame\"><span class=\"st-type\">MyNamespace.Program</span>.<span class=\"st-method\">Main</span><span class=\"st-frame-params\">(<span class=\"st-param-type\">String[]</span> <span class=\"st-param-name\">args</span>)</span></span> в <span class=\"st-file\">C:\\apps\\MyNamespace\\Program.cs</span>:<span class=\"st-line\">строка 13</span>";

            it('-> recognize language', function() {
                assert.equal('russian', languageRU);
            });
            it('-> create HTML', function() {
                assert.equal(stringStack, stackElementRU.element.innerHTML);
            });
        });

        describe('> Chinese', function() {
            const stackElementCN = new netStack('.stacktrace-cn', { prettyprint: true });
            const languageCN = stackElementCN.getLanguage();
            const stringStack = "System.Exception: Could not load file or assembly 'netstandard, Version=2.1.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'. 系统找不到指定的文件。\n   在 <span class=\"st-frame\"><span class=\"st-type\">System.Runtime.ExceptionServices.ExceptionDispatchInfo</span>.<span class=\"st-method\">Throw</span><span class=\"st-frame-params\">()</span></span>\n   在 <span class=\"st-frame\"><span class=\"st-type\">System.Runtime.CompilerServices.TaskAwaiter</span>.<span class=\"st-method\">HandleNonSuccessAndDebuggerNotification</span><span class=\"st-frame-params\">(<span class=\"st-param-type\">Task</span> <span class=\"st-param-name\">task</span>)</span></span>\n   在 <span class=\"st-frame\"><span class=\"st-type\">ClrCustomVisualizerVSHost.VisualizerTargetInternal.<span>&lt;</span>RequestDataAsync<span>&gt;</span>d__10</span>.<span class=\"st-method\">MoveNext</span><span class=\"st-frame-params\">()</span></span> \n   --- 引发异常的上一位置中堆栈跟踪的末尾 ---\n   在 <span class=\"st-frame\"><span class=\"st-type\">System.Runtime.ExceptionServices.ExceptionDispatchInfo</span>.<span class=\"st-method\">Throw</span><span class=\"st-frame-params\">()</span></span>\n   在 <span class=\"st-frame\"><span class=\"st-type\">System.Runtime.CompilerServices.TaskAwaiter</span>.<span class=\"st-method\">HandleNonSuccessAndDebuggerNotification</span><span class=\"st-frame-params\">(<span class=\"st-param-type\">Task</span> <span class=\"st-param-name\">task</span>)</span></span>\n   在 <span class=\"st-frame\"><span class=\"st-type\">Microsoft.VisualStudio.OutOfProcessVisualizers.VisualizerTarget.<span>&lt;</span>RequestDataAsync<span>&gt;</span>d__10</span>.<span class=\"st-method\">MoveNext</span><span class=\"st-frame-params\">()</span></span>";

            it('-> recognize language', function() {
                assert.equal('chinese', languageCN);
            });
            it('-> create HTML', function() {
                assert.equal(stringStack, stackElementCN.element.innerHTML);
            });
        });
    });
});